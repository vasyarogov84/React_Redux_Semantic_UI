{"version":3,"sources":["api/users.js","googleAuth/GoogleAuth.js","components/login.js","actions/index.js","modals/game_over_modal.js","components/game.js","components/pregame.js","reducers/index.js","reducers/reducers.js","index.js"],"names":["axios","create","baseURL","GoogleAuth","state","first_name","last_name","isSignedIn","googleAuth","_callee","_this$auth$currentUse","regenerator_default","a","wrap","_context","prev","next","_this","auth","signOut","props","redirect","signIn","currentUser","get","w3","ofa","wea","stop","this","_this2","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","_this2$auth$currentUs","setState","react_default","createElement","onClick","className","Component","Login","id","uuid","best_time","attempts","setValues","e","stateProperty","target","name","value","trim","Object","defineProperty","checkButton","_this$state","_ref","usersInDataBase","callToGetUsers","sent","data","find","user","addUser","history","push","objectSpread","Form","Field","placeholder","onChange","Link","concat","to","googleAuth_GoogleAuth","connect","asyncToGenerator","mark","dispatch","findUser","cameBackUserId","allUsers","currentUsers","_allUsers","_currentUsers","keys","length","console","log","users","_ref2","delete","post","filter","el","type","payload","_x","apply","arguments","GameOverModal","modalOpen","handleOpen","handleClose","Modal","open","onClose","basic","size","Header","icon","content","Content","Actions","Icon","color","Game","clicks","results","start_time","curent_time","modal","setResult","time_when_item_been_clicked","Date","getTime","start","diff","reduce","b","sort","toConsumableArray","updateUser","_this$props$curent_us","curent_user","fullName","getSize","Math","floor","random","style","width","height","backgroundColor","i","getColor","marginTop","marginLeft","borderRadius","toFixed","game_over_modal","_ref3","_ref4","_callee2","checkPrevResult","response","_context2","patch","_x2","Pregame","renderUsers","map","Table","Row","key","Cell","celled","HeaderCell","Body","rootReducers","combineReducers","undefined","action","_action$payload","devTools","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","ReactDOM","render","es","store","createStore","reducers","applyMiddleware","reduxThunk","BrowserRouter","Switch","Route","path","component","exact","document","querySelector"],"mappings":"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","file":"static/js/main.3dc1fddc.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://circle-users.herokuapp.com/users'\r\n});","import React, { Component } from 'react';\r\n\r\nclass GoogleAuth extends Component {\r\n    state = {\r\n        first_name: '',\r\n        last_name: '',\r\n        isSignedIn: null\r\n    }\r\n    componentDidMount() {\r\n        window.gapi.load('client:auth2', () => {\r\n            window.gapi.client\r\n                .init({\r\n                    clientId: '135244684637-6irrdc7qkt7ufpf9tdpev5inifaqjnal.apps.googleusercontent.com',\r\n                    scope: 'email'\r\n                }).then(() => {\r\n                    this.auth = window.gapi.auth2.getAuthInstance();\r\n                    if (this.auth.isSignedIn.get()) {\r\n                        let { ofa, wea } = this.auth.currentUser.get().w3;\r\n                        this.setState(() => ({\r\n                            first_name: ofa,\r\n                            last_name: wea,\r\n                            isSignedIn: true\r\n                        }));\r\n                    }\r\n                })\r\n        })\r\n    }\r\n    googleAuth = async () => {\r\n        if (this.state.isSignedIn) {\r\n            this.auth.signOut();\r\n            this.props.redirect(this.state); \r\n        } else {\r\n           await this.auth.signIn();\r\n            let { ofa: first_name, wea: last_name } = this.auth.currentUser.get().w3;\r\n            this.props.redirect({first_name, last_name});\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <button onClick={this.googleAuth} className=\"ui red google button\">\r\n                <i className=\"google icon\" />\r\n                Sign In with Google\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GoogleAuth;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport uuid from 'uuid';\r\nimport callToGetUsers from '../api/users'\r\nimport { addUser } from '../actions';\r\nimport GoogleAuth from '../googleAuth/GoogleAuth';\r\nimport '../styles/login.css';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    first_name: '',\r\n    last_name: '',\r\n    id: uuid(),\r\n    best_time: 0,\r\n    attempts: 0\r\n  }\r\n\r\n  setValues = (e) => {\r\n    let stateProperty = e.target.name;\r\n    let value = e.target.value.trim();\r\n    this.setState({ [stateProperty]: value });\r\n  }\r\n\r\n  checkButton = () => {\r\n    const { first_name, last_name } = this.state;\r\n    if (first_name && last_name) {\r\n      return '';\r\n    }\r\n    return 'disabled';\r\n  }\r\n  redirect = async ({ first_name, last_name }) => {\r\n    const usersInDataBase = await callToGetUsers.get('/');\r\n    //console.log(usersInDataBase);\r\n    const checkUser = await usersInDataBase.data.find(user => \r\n      user.first_name ===  first_name && user.last_name ===  last_name\r\n      );\r\n      //console.log(checkUser);\r\n    if (checkUser) {\r\n      await this.props.addUser({first_name, last_name });\r\n      \r\n      this.props.history.push('./pregame');\r\n    } else {\r\n      await this.props.addUser({ ...this.state, first_name, last_name });\r\n      this.props.history.push('./pregame');\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"ui raised very padded text container segment form\">\r\n        <Form>\r\n          <Form.Field>\r\n            <label>First Name</label>\r\n            <input placeholder='First Name' name=\"first_name\" value={this.state.first_name}\r\n              onChange={this.setValues}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Last Name</label>\r\n            <input placeholder='Last Name' name=\"last_name\" value={this.state.last_name}\r\n              onChange={this.setValues}\r\n            />\r\n          </Form.Field>\r\n          <Link\r\n            className={`ui primary button ${this.checkButton()}`}\r\n            to=\"/pregame\"\r\n            onClick={() => { this.redirect(this.state) }}\r\n          >Submit</Link>\r\n          <GoogleAuth redirect={this.redirect} />\r\n        </Form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { addUser })(Login);\r\n\r\n\r\n\r\n\r\n","import users from '../api/users';\r\n\r\nexport const addUser = user => async (dispatch) => {\r\n\r\n    if (Object.keys(user).length === 2) {\r\n        console.log(\"I'm here\");\r\n        const findUser = await users.get('/');\r\n        const cameBackUserId = await findUser.data.find(({ first_name, last_name }) => {\r\n            return first_name === user.first_name && last_name === user.last_name\r\n        });\r\n\r\n        await users.delete(`/${cameBackUserId.id}`);\r\n        await users.post('/', cameBackUserId);\r\n        const allUsers = await users.get('/');\r\n\r\n        const currentUsers = await allUsers.data.filter((el) => {\r\n\r\n            if (el.attempts === 0 && el.id !== user.id) {\r\n                users.delete(`/${el.id}`);\r\n            }\r\n            return el.attempts !== 0 || el.id === user.id;\r\n        })\r\n\r\n        dispatch({\r\n            type: 'ADD_USER',\r\n            payload: currentUsers\r\n        });\r\n\r\n    } else {\r\n        await users.post('/', user);\r\n        const allUsers = await users.get('/');\r\n        const currentUsers = await allUsers.data.filter((el) => {\r\n\r\n            if (el.attempts === 0 && el.id !== user.id) {\r\n                users.delete(`/${el.id}`);\r\n            }\r\n            return el.attempts !== 0 || el.id === user.id;\r\n        })\r\n        dispatch({\r\n            type: 'ADD_USER',\r\n            payload: currentUsers\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport const updateUser = ({ id, first_name, last_name, results, attempts, best_time\r\n}) => async dispatch => {\r\n\r\n    const checkPrevResult = await users.get(`/${id}`);\r\n    if (best_time > checkPrevResult.data['best_time'] && checkPrevResult.data['best_time'] !== 0) {\r\n        best_time = checkPrevResult.data['best_time'];\r\n    }\r\n\r\n    const response = await users.patch(`/${id}`, {\r\n        first_name,\r\n        last_name,\r\n        results,\r\n        attempts,\r\n        best_time\r\n    });\r\n\r\n    dispatch({\r\n        type: 'UPDATE_USER',\r\n        payload: response.data\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport { Header, Icon, Modal } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n class GameOverModal extends Component {\r\n    state = { modalOpen: true }\r\n\r\n    handleOpen = () => this.setState({ modalOpen: true })\r\n\r\n    handleClose = () => this.setState({ modalOpen: false })\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                //trigger={<Button onClick={this.handleOpen}>Show Modal</Button>}\r\n                open={this.state.modalOpen}\r\n                onClose={this.handleClose}\r\n                basic\r\n                size='small'\r\n            >\r\n                <Header icon='hotjar' content='Position:' />\r\n                <Modal.Content>\r\n                    <h3>{`Best Result for ${this.props.user.first_name}: ${this.props.user.best_time/1000} seconds, after ${this.props.user.attempts} ${this.props.user.attempts === 1 ? 'attempt' : 'attempts' }`}</h3>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Link className=\"positive ui button\" to=\"/\"  onClick={this.handleClose}>\r\n                        <Icon className='checkmark' /> New Player\r\n                    </Link>\r\n                    <Link className=\"positive ui button\" to=\"/pregame\" color='green' onClick={this.handleClose} >\r\n                        <Icon className='checkmark' /> Play again\r\n                    </Link>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStatToProps(state) {\r\n    //console.log('MODAL',state);\r\n   return {\r\n       user: state.users[state.users.length - 1]\r\n   }\r\n}\r\n\r\nexport default connect(mapStatToProps)(GameOverModal);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport GameOverModal from '../modals/game_over_modal';\r\nimport { updateUser } from '../actions/index';\r\n\r\n\r\n\r\n\r\nclass Game extends Component {\r\n  state = {\r\n    clicks: 0,\r\n    results: [],\r\n    start_time: 0,\r\n    curent_time: 0,\r\n    best_time: 0,\r\n    modal: false\r\n  }\r\n  componentDidMount(props) {\r\n    let {first_name, last_name, attempts, id } = this.props.curent_user;\r\n    let fullName = `${first_name} ${last_name}`;\r\n    this.setState({ \r\n      first_name,\r\n      last_name,\r\n      start_time: new Date().getTime(),\r\n      name: fullName,\r\n      attempts: attempts + 1,\r\n      id,\r\n      clicks: 0,\r\n      modal: false\r\n    })\r\n  }\r\n\r\n  setResult = () => {\r\n   \r\n    if (this.state.clicks < 6) {\r\n      let time_when_item_been_clicked = new Date().getTime();\r\n      let start = this.state.start_time;\r\n      let sum = this.state.results.length ? this.state.results.reduce((a, b) => a + b) : 0;\r\n\r\n      let diff = time_when_item_been_clicked - sum - start;\r\n      let best_time = this.state.results.sort((a, b) => a - b);\r\n\r\n\r\n      this.setState({\r\n        clicks: this.state.clicks + 1,\r\n        results: [...this.state.results, diff],\r\n        curent_time: diff,\r\n        best_time: best_time[0],\r\n      })\r\n    } else {\r\n       this.setState({\r\n         modal : true\r\n        });\r\n      \r\n       this.props.updateUser(this.state);\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n  render() {\r\n    const getSize = () => {\r\n      return Math.floor(Math.random() * 30 + 30)\r\n    }\r\n    const getColor = () => {\r\n      const symbols = \"ABCDEF1234567890\";\r\n      let color = \"#\";\r\n      for (let i = 0; i < 6; i++) {\r\n        color += symbols[Math.floor(Math.random() * 16)]\r\n      }\r\n      return color;\r\n    }\r\n\r\n    let style = {\r\n      width: getSize(),\r\n      height: getSize(),\r\n      backgroundColor: getColor(),\r\n      marginTop: getSize() + Math.floor(Math.random() * 600),\r\n      marginLeft: getSize() + Math.floor(Math.random() * 600),\r\n      borderRadius: getSize() - 10\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"ui horizontal segments\">\r\n          <h3 style={{ color: 'red' }} className=\"ui segment\">\r\n            {this.props.curent_user.first_name} {this.props.curent_user.last_name}\r\n          </h3>\r\n          <h3 className=\"ui segment\">\r\n            Best Time: <span style={{ color: 'green' }}>{(this.state.best_time / 1000).toFixed(2)}  (seconds)</span>\r\n          </h3>\r\n          <h3 className=\"ui segment\">\r\n            Time: <span style={{ color: 'red' }}>{(this.state.curent_time / 1000).toFixed(2)} (seconds)</span>\r\n          </h3>\r\n        </div>\r\n        <div style={style} onClick={this.setResult}></div>\r\n        {this.state.modal ? <GameOverModal /> : ''}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  //console.log(\"GAME_ATATE\",state);\r\n  return {\r\n    curent_user: state.users[state.users.length - 1]\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{updateUser})(Game);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Table } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/pregame.css';\r\n\r\nclass Pregame extends Component {\r\n\r\n    renderUsers = (props) => {\r\n        return this.props.users.map((user, i) => {\r\n            return (\r\n\r\n                <Table.Row\r\n                    key={i}\r\n                    style={{ backgroundColor: (i === this.props.users.length - 1) ? 'lightgreen' : 'white' }}>\r\n                    <Table.Cell>{user.first_name} {user.last_name}</Table.Cell>\r\n                    <Table.Cell>{user.attempts ? user.attempts : 0}</Table.Cell>\r\n                    <Table.Cell>{(user.best_time/1000).toFixed(3)}</Table.Cell>\r\n                </Table.Row>\r\n\r\n            );\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui container\">\r\n                <Table celled>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Name</Table.HeaderCell>\r\n                            <Table.HeaderCell>Attempts</Table.HeaderCell>\r\n                            <Table.HeaderCell>Best Result (seconds)</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {this.renderUsers()}\r\n                    </Table.Body>\r\n                </Table>\r\n                <Link className=\"ui primary button\" to=\"/game\">Start Game</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.users\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Pregame);\r\n","import { combineReducers } from 'redux';\r\nimport { addUser} from './reducers';\r\n\r\n\r\n\r\nconst rootReducers = combineReducers({\r\n    users: addUser\r\n});  \r\n\r\nexport default rootReducers;","export const addUser = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_USER':\r\n            return [...action.payload];\r\n        case 'UPDATE_USER':\r\n            return state.map(user => {\r\n                if (user.id === action.payload.id) {\r\n\r\n                    let { best_time, attempts } = action.payload;\r\n                    if (user.best_time !== 0 && user.best_time < best_time) {\r\n                        best_time = user.best_time\r\n                    }\r\n                    return { ...user, best_time, attempts };\r\n\r\n                } return user;\r\n            });\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport Login from './components/login';\r\nimport Game from './components/game';\r\nimport Pregame from './components/pregame';\r\nimport reducers from './reducers';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={createStore(reducers,devTools(applyMiddleware(reduxThunk)))}>\r\n        <BrowserRouter>\r\n            <div>\r\n                <Switch>\r\n                    <Route path=\"/\" component={Login} exact={true} />\r\n                    <Route path=\"/game\" component={Game} />\r\n                    <Route path=\"/pregame\" component={Pregame} />\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.querySelector('#root'));\r\n"],"sourceRoot":""}